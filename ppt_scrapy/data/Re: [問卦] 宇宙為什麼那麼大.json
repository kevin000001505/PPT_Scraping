{"author": "swfswf (scfw)", "category": "Gossiping", "title": "Re: [問卦] 宇宙為什麼那麼大", "date": "Sat Apr 13 09:28:42 2024", "content": ["['※ 引述《Dcwei (野心家)》之銘言：', ': 我在想呀 宇宙是不是其實並沒有那麼大', ': 所有的一切都是更高維度的空間 我們被困在低次元', ': 所以我們才會覺得宇宙如此大 沒有邊界']", "想像一下電動遊戲如薩爾達傳說曠野之息裡的世界，靠記憶體和處理器產生虛擬世界，裡面的一個人的手的一根手指頭上的一個畫素，是如何被模擬的，有2類演算法的可能性：演算法A：拿記憶體的排列位置代表空間，然後這個畫素是什麼顏色，就在這個位置上的記憶體寫如相當於這個顏色的值，如果這個點由P移動到Q，就是處理器執行指令將記憶體 P裡面的資料清空，寫入有顏色的資料到Q。演算法B：建立一個資料組寫入記憶體，這個資料組含有 [ 顏色, 虛擬世界的座標 ] ，如果這個點由P移動到Q，就是處理器執行指令將虛擬世界的座標由P改為Q。演算法A的情況一般來說只能適用於比較小的遊戲世界，如打磚塊、俄羅斯方塊、超級瑪琍兄弟的2D關卡表達（如用一個Byte寫入值x代表磚塊、用一個Byte寫入值y代表問號）等。而像之前所述薩爾達傳說曠野之息，應該只能用演算法B的方法來建造一個龐大無比的遊戲世界，因為沒有那麼多記憶體，處理器也不可能即時處理那麼多整個世界的資訊，唯一可能的實現虛擬世界的方式是靠類似演算法B的方法，即時計算出主角視角的畫面。類比到我們真實世界，背後運作原則是比較像是演算法A還是演算法B呢？個人想法是覺得比較像演算法B，因為宇宙實在太大了，宇宙一直擴張，空間不斷增加，也像無中生有一般，和我們觀察到的質能守恆定律不協調。所以我們可以假想物理實體的存在，是代表實體類型的值加上表達空間位置的資料組。如一個光子的存在，就是有一個光子其能量值、運動方向、伴隨著表達空間位置的資料組，而每秒鐘空間表達距離上一秒30萬公里。而宇宙擴張，其實是物理實體間參考空間表達完成交互作用的常數會規律性地持續降低，這樣看起來和宇宙遠方物體的距離就越來越遠了。如果我們有一天能想出方法如何直接改變整個太空船表達空間位置的資料組，也就可以瞬間移動到遠方了（當然也許我們的宇宙，排除了這樣做的可能性）。--"], "post_comment": [{"comment_author": "StylishTrade", "comment_date": ["04/13", "09:32"], "comment_content": "絕對是A"}, {"comment_author": "potionx", "comment_date": ["04/13", "09:32"], "comment_content": "可是宇宙在膨脹 這就說明資料會一直膨脹"}, {"comment_author": "potionx", "comment_date": ["04/13", "09:33"], "comment_content": "那要做到這樣的事情 儲存空間也要無限大"}, {"comment_author": "StylishTrade", "comment_date": ["04/13", "09:33"], "comment_content": "真空中就有電磁場了 你不模擬怎麼行"}, {"comment_author": "StylishTrade", "comment_date": ["04/13", "09:34"], "comment_content": "你不全模擬 NPC就發現你做弊了QQ"}, {"comment_author": "kingstongyu", "comment_date": ["04/13", "11:24"], "comment_content": "你要不要去問NVIDIA底下的工程師?!還"}, {"comment_author": "kingstongyu", "comment_date": ["04/13", "11:25"], "comment_content": "是學CUDA?!"}]}
